openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /user:
    put:
      tags:
      - user-controller
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
    post:
      tags:
      - user-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        "200":
          description: OK
  /song:
    put:
      tags:
      - song-controller
      operationId: update_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Song'
        required: true
      responses:
        "200":
          description: OK
    post:
      tags:
      - song-controller
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SongDTO'
        required: true
      responses:
        "200":
          description: OK
  /band:
    put:
      tags:
      - band-controller
      operationId: update_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Band'
        required: true
      responses:
        "200":
          description: OK
    post:
      tags:
      - band-controller
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BandDTO'
        required: true
      responses:
        "200":
          description: OK
  /album:
    put:
      tags:
      - album-controller
      operationId: update_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
        required: true
      responses:
        "200":
          description: OK
    post:
      tags:
      - album-controller
      operationId: create_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlbumDTO'
        required: true
      responses:
        "200":
          description: OK
  /activity:
    put:
      tags:
      - activity-controller
      operationId: update_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
        required: true
      responses:
        "200":
          description: OK
    post:
      tags:
      - activity-controller
      operationId: create_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityDTO'
        required: true
      responses:
        "200":
          description: OK
  /user/{id}:
    get:
      tags:
      - user-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
      - user-controller
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /user/all:
    get:
      tags:
      - user-controller
      operationId: getAll
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /song/{id}:
    get:
      tags:
      - song-controller
      operationId: getById_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Song'
    delete:
      tags:
      - song-controller
      operationId: delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /song/all:
    get:
      tags:
      - song-controller
      operationId: getAll_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Song'
  /band/{id}:
    get:
      tags:
      - band-controller
      operationId: getById_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Band'
    delete:
      tags:
      - band-controller
      operationId: delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /band/all:
    get:
      tags:
      - band-controller
      operationId: getAll_2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Band'
  /album/{id}:
    get:
      tags:
      - album-controller
      operationId: getById_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Album'
    delete:
      tags:
      - album-controller
      operationId: delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /album/all:
    get:
      tags:
      - album-controller
      operationId: getAll_3
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Album'
  /activity/{id}:
    get:
      tags:
      - activity-controller
      operationId: getById_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Activity'
    delete:
      tags:
      - activity-controller
      operationId: delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /activity/all:
    get:
      tags:
      - activity-controller
      operationId: getAll_4
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
components:
  schemas:
    User:
      required:
      - id
      - username
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
    Song:
      required:
      - duration
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        duration:
          type: integer
          format: int64
    Activity:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Album:
      required:
      - id
      - name
      - songs
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        songs:
          type: array
          items:
            $ref: '#/components/schemas/Song'
    Band:
      required:
      - activities
      - albums
      - id
      - members
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        members:
          type: array
          items:
            $ref: '#/components/schemas/User'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
        albums:
          type: array
          items:
            $ref: '#/components/schemas/Album'
    UserDTO:
      required:
      - username
      type: object
      properties:
        username:
          type: string
    SongDTO:
      required:
      - duration
      - name
      type: object
      properties:
        name:
          type: string
        duration:
          type: integer
          format: int64
    BandDTO:
      required:
      - activities
      - albums
      - members
      - name
      type: object
      properties:
        name:
          type: string
        members:
          type: array
          items:
            $ref: '#/components/schemas/User'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
        albums:
          type: array
          items:
            $ref: '#/components/schemas/Album'
    AlbumDTO:
      required:
      - name
      - songs
      type: object
      properties:
        name:
          type: string
        songs:
          type: array
          items:
            $ref: '#/components/schemas/SongDTO'
    ActivityDTO:
      required:
      - name
      type: object
      properties:
        name:
          type: string
