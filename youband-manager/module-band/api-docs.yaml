openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/bands/{id}:
    get:
      tags:
      - band-rest-controller
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BandDto'
    put:
      tags:
      - band-rest-controller
      operationId: updateBand
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BandDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BandDto'
    delete:
      tags:
      - band-rest-controller
      operationId: deleteBand
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BandDto'
  /api/bands:
    get:
      tags:
      - band-rest-controller
      operationId: findAll
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BandDto'
    post:
      tags:
      - band-rest-controller
      operationId: createBand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BandDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BandDto'
components:
  schemas:
    BandDto:
      required:
      - image
      - managerId
      - name
      - style
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          description: full name
          example: Misty
        style:
          type: string
          description: band style
          example: ROCK
          enum:
          - ROCK
          - POP
          - PUNK
          - COUNTRY
          - RAP
          - K_POP
          - FUNK
          - REGGAE
          - FOLK
          - JAZZ
          - DISCO
          - CLASSIC
          - BLUES
          - VOCAL
        image:
          type: array
          items:
            type: string
            format: byte
        managerId:
          type: integer
          description: manager ID
          format: int64
          example: 8
