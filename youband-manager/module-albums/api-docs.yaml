openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/albums/{id}:
    get:
      tags:
        - album-rest-controller
      operationId: findById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AlbumDto'
    put:
      tags:
        - album-rest-controller
      operationId: updateAlbum
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlbumDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AlbumDto'
    delete:
      tags:
        - album-rest-controller
      operationId: deleteAlbum
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AlbumDto'
  /api/albums:
    get:
      tags:
        - album-rest-controller
      operationId: getAll
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlbumDto'
    post:
      tags:
        - album-rest-controller
      operationId: createAlbum
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlbumDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AlbumDto'
components:
  schemas:
    AlbumDto:
      required:
        - genre
        - name
        - releaseDate
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: album's identification number
          example: 7
        name:
          type: string
          description: album's name
          example: Nevermind
        releaseDate:
          type: string
          format: date-time
          description: album's date of release
        genre:
          type: string
          description: album's music genre
          enum:
            - ROCK
            - POP
            - PUNK
            - COUNTRY
            - RAP
            - K_POP
            - FUNK
            - REGGAE
            - FOLK
            - JAZZ
            - DISCO
            - CLASSIC
            - BLUES
            - VOCAL
        songs:
          type: array
          description: list of album's songs
          items:
            $ref: '#/components/schemas/Song'
    Song:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: song's identification number
          example: 3
        title:
          type: string
          description: song's name
          example: Personal jesus
        duration:
          type: string
          description: song's duration in minutes and seconds
          example: "PT5M1S"
