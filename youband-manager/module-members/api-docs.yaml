openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/users/{id}:
    get:
      tags:
      - user-rest-controller
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
    put:
      tags:
      - user-rest-controller
      operationId: updateUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
    delete:
      tags:
      - user-rest-controller
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/invitations/{id}:
    get:
      tags:
      - invitation-rest-controller
      operationId: findById_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvitationDto'
    put:
      tags:
      - invitation-rest-controller
      operationId: updateInvitation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvitationDto'
    delete:
      tags:
      - invitation-rest-controller
      operationId: deleteInvitation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/users:
    get:
      tags:
      - user-rest-controller
      operationId: getAll
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
    post:
      tags:
      - user-rest-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
  /api/users/register:
    post:
      tags:
      - user-rest-controller
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        "200":
          description: OK
  /api/users/logout:
    post:
      tags:
      - user-rest-controller
      operationId: logoutUser
      responses:
        "200":
          description: OK
  /api/users/login:
    post:
      tags:
      - user-rest-controller
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        "200":
          description: OK
  /api/invitations:
    post:
      tags:
      - invitation-rest-controller
      operationId: createInvitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvitationDto'
components:
  schemas:
    UserDto:
      required:
      - email
      - firstName
      - lastName
      - userType
      type: object
      properties:
        id:
          type: integer
          format: int64
        userType:
          type: string
          enum:
          - MANAGER
          - BAND_MEMBER
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
    InvitationDto:
      required:
      - dateReceived
      - fromBandId
      - message
      - status
      - toUserId
      type: object
      properties:
        id:
          type: integer
          format: int64
        fromBandId:
          type: integer
          format: int64
        toUserId:
          type: integer
          format: int64
        message:
          type: string
        status:
          type: string
          enum:
          - DECLINED
          - ACCEPTED
          - PENDING
        dateReceived:
          type: string
          format: date
